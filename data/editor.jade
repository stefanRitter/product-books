doctype
html(lang="en", itemtype="http://schema.org/WebPage" itemscope)
  
    head(prefix="og: http://ogp.me/ns#")
        meta(charset="utf-8")
        title Product Books Editor
        link(rel="stylesheet", type="text/css", href="editor.css")
    
    body
        form#newBookForm
            //- basic info
            input(type="text", placeholder="title", name="title")
            input(type="text", placeholder="author", name="author")
            input(type="text", placeholder="logo", name="logo")
            input(type="text", placeholder="tags, tags", name="tags")

            //- amazon urls
            input(type="url", placeholder="urlUS", name="urlUS")
            input(type="url", placeholder="urlUK", name="urlUK")
            input(type="url", placeholder="urlDE", name="urlDE")
            input(type="url", placeholder="urlFR", name="urlFR")
            
            //- recommends
            input(type="text", placeholder="recommends, recommends", name="recommends")
            
            //- amazon ratings
            input(type="number", placeholder="Amazon rating", name="amazonRating")
            input(type="number", placeholder="Amazon # ratings", name="amazonNumRatings")
            
            //- goodreads ratings
            input(type="number", placeholder="Goodreads rating", name="goodreadsRating")
            input(type="number", placeholder="Goodreads # ratings", name="goodreadsNumRatings")
            
            button(type="button" name="button" id="addBook") Add Book
        
        hr

        #outputSection
            button(type="button" name="button" id="transform") Output JSON
            textarea#output
                | output the json blob here
        hr
    
        #books(data-books=JSON.stringify(books))
            each book in books
                .book
                    // img(src=book.logo alt=book.title)
                    p=book.title
                    p=book.author
                    p=book.logo
                    .tags
                        each tag in book.tags
                            span=tag
                    .recommenders
                        each name in book.recommends
                            span=name
                    
        script(type="text/javascript" src="/dist/zepto.min.js")
        script.
            var books = $('#books').data('books');
            var newBook = {};
            
            books.sort(function (a, b) {
                return b.recommends.length - a.recommends.length;
            });
            console.log(JSON.stringify(books));
            
            //- $('#books .book').each(function (i, el) {
            //-     console.log(el);
            //- });
            
            // listen to buttons
            $('#transform').on('click', function (e) {
                e.preventDefault();
                $('#output').text(JSON.stringify(books));
            });
            
            // add or edit book
            $('#addBook').on('click', function (e) {
                e.preventDefault();
                $("#newBookForm").serializeArray().forEach(function (keyValue) {
                    newBook[keyValue.name] = keyValue.value;
                });
                
                var newTags = [];
                newBook.tags.split(',').forEach(function (tag) {
                    if (tag) newTags.push(tag.truncate());
                });
                newBook.tags = newTags;
                
                var recommends = [];
                newBook.recommends.split(',').forEach(function (tag) {
                    if (tag) recommends.push(tag.truncate());
                });
                newBook.recommends = recommends;
                
                newBook.score = newBook.recommends.length;
                console.log(newBook);
                
                books.push(newBook);
            });
            
            
